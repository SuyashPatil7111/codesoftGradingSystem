#include <iostream>
#include <vector>
#include <string>
#include <algorithm>

struct Student {
    std::string name;
    double grade;
};

void displayStudent(const Student& student) {
    std::cout << "Name: " << student.name << "\tGrade: " << student.grade << std::endl;
}

int main() {
    std::vector<Student> students;

    // Get the number of students
    int numStudents;
    std::cout << "Enter the number of students: ";
    std::cin >> numStudents;

    // Input student names and grades
    for (int i = 0; i < numStudents; ++i) {
        Student student;
        std::cout << "Enter the name of student " << (i + 1) << ": ";
        std::cin >> student.name;

        std::cout << "Enter the grade for student " << (i + 1) << ": ";
        std::cin >> student.grade;

        students.push_back(student);
    }

    // Calculate average grade
    double totalGrade = 0.0;
    for (const auto& student : students) {
        totalGrade += student.grade;
    }
    double averageGrade = totalGrade / numStudents;

    // Find highest and lowest grades
    auto maxGradeIt = std::max_element(students.begin(), students.end(),
                                       [](const Student& a, const Student& b) {
                                           return a.grade < b.grade;
                                       });

    auto minGradeIt = std::min_element(students.begin(), students.end(),
                                       [](const Student& a, const Student& b) {
                                           return a.grade < b.grade;
                                       });

    // Display results
    std::cout << "\nStudent Grades:\n";
    for (const auto& student : students) {
        displayStudent(student);
    }

    std::cout << "\nAverage Grade: " << averageGrade << std::endl;
    std::cout << "Highest Grade: ";
    displayStudent(*maxGradeIt);
    std::cout << "Lowest Grade: ";
    displayStudent(*minGradeIt);

    return 0;
}
